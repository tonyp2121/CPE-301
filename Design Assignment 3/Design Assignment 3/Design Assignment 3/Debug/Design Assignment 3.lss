
Design Assignment 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000388  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  000003fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000042c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000915  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000697  00000000  00000000  00000da1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000041b  00000000  00000000  00001438  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001854  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003bc  00000000  00000000  00001878  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000288  00000000  00000000  00001c34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00001ebc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a8 30       	cpi	r26, 0x08	; 8
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 c2 01 	jmp	0x384	; 0x384 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:

volatile int red = 0, blue = 0, green = 0, caseNumber = 0;

int main(void)
{
	DDRB = 0b00001000;	// sets OC2A
  90:	88 e0       	ldi	r24, 0x08	; 8
  92:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b01100000;	// sets OC0A & OC0B
  94:	80 e6       	ldi	r24, 0x60	; 96
  96:	8a b9       	out	0x0a, r24	; 10
	TCCR0A = (1 << COM0A1) | (1 << COM0B1) | (1 << WGM01) | (1 << WGM00) ; // non invers phase correct PWM mode
  98:	83 ea       	ldi	r24, 0xA3	; 163
  9a:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1 << CS00) ;  // no prescaler
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	85 bd       	out	0x25, r24	; 37
	TCCR2A = (1 << COM2A1) | (1 << WGM21) | (1 << WGM20); // regular
  a0:	93 e8       	ldi	r25, 0x83	; 131
  a2:	90 93 b0 00 	sts	0x00B0, r25	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	TCCR2B =  (1 << CS20) ; // no prescalar
  a6:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
		blue = 0xEE;
		caseNumber++;
		_delay_ms(500);
	}
	else if (caseNumber == 7){ // white
		red = 0xFF;
  aa:	2f ef       	ldi	r18, 0xFF	; 255
  ac:	30 e0       	ldi	r19, 0x00	; 0
		caseNumber++;
		_delay_ms(500);
	}
	else if (caseNumber == 6){ // turquoise
		red = 0x00;
		green = 0xE5;
  ae:	0f 2e       	mov	r0, r31
  b0:	f5 ee       	ldi	r31, 0xE5	; 229
  b2:	ef 2e       	mov	r14, r31
  b4:	f1 2c       	mov	r15, r1
  b6:	f0 2d       	mov	r31, r0
		blue = 0xEE;
  b8:	0f 2e       	mov	r0, r31
  ba:	fe ee       	ldi	r31, 0xEE	; 238
  bc:	cf 2e       	mov	r12, r31
  be:	d1 2c       	mov	r13, r1
  c0:	f0 2d       	mov	r31, r0
		blue = 0x00;
		caseNumber++;
		_delay_ms(500);
	}
	else if (caseNumber == 5){ // purple
		red = 0xAD;
  c2:	cd ea       	ldi	r28, 0xAD	; 173
  c4:	d0 e0       	ldi	r29, 0x00	; 0
		green = 0x00;
		blue = 0xC4;
  c6:	a4 ec       	ldi	r26, 0xC4	; 196
  c8:	b0 e0       	ldi	r27, 0x00	; 0
		blue = 0x00;
		caseNumber++;
		_delay_ms(500);
	}
	else if (caseNumber == 4){ // orange
		red = 88;
  ca:	68 e5       	ldi	r22, 0x58	; 88
  cc:	70 e0       	ldi	r23, 0x00	; 0
		green  = 5;
  ce:	45 e0       	ldi	r20, 0x05	; 5
  d0:	50 e0       	ldi	r21, 0x00	; 0
		caseNumber= 0;
		_delay_ms(500);
	}
	
	OCR0A = red;
	OCR2A = green;
  d2:	e3 eb       	ldi	r30, 0xB3	; 179
  d4:	f0 e0       	ldi	r31, 0x00	; 0
while(1)
{
	//OCR0A = red
	//OCR2A = green
	//OCR0B = blue
	if(caseNumber == 0){ // red 
  d6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  da:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  de:	89 2b       	or	r24, r25
  e0:	f9 f4       	brne	.+62     	; 0x120 <main+0x90>
		red = 0xFF;
  e2:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <red+0x1>
  e6:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <red>
		green = 0x00;
  ea:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <green+0x1>
  ee:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <green>
		blue = 0x00;
  f2:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <blue+0x1>
  f6:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <blue>
		caseNumber++;
  fa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  fe:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 108:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10c:	1f ef       	ldi	r17, 0xFF	; 255
 10e:	84 e3       	ldi	r24, 0x34	; 52
 110:	9c e0       	ldi	r25, 0x0C	; 12
 112:	11 50       	subi	r17, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0x82>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0x8c>
 11c:	00 00       	nop
 11e:	22 c1       	rjmp	.+580    	; 0x364 <main+0x2d4>
		_delay_ms(500);
	}
	else if (caseNumber == 1){ // blue
 120:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 124:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f9 f4       	brne	.+62     	; 0x16a <main+0xda>
		red = 0x00;
 12c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <red+0x1>
 130:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <red>
		green = 0x00;
 134:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <green+0x1>
 138:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <green>
		blue = 0xFF;
 13c:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <blue+0x1>
 140:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <blue>
		caseNumber++;
 144:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 148:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 14c:	01 96       	adiw	r24, 0x01	; 1
 14e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 152:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 156:	1f ef       	ldi	r17, 0xFF	; 255
 158:	84 e3       	ldi	r24, 0x34	; 52
 15a:	9c e0       	ldi	r25, 0x0C	; 12
 15c:	11 50       	subi	r17, 0x01	; 1
 15e:	80 40       	sbci	r24, 0x00	; 0
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <main+0xcc>
 164:	00 c0       	rjmp	.+0      	; 0x166 <main+0xd6>
 166:	00 00       	nop
 168:	fd c0       	rjmp	.+506    	; 0x364 <main+0x2d4>
		_delay_ms(500);
	}	
	else if (caseNumber == 2){ // green
 16a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 16e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 172:	02 97       	sbiw	r24, 0x02	; 2
 174:	f9 f4       	brne	.+62     	; 0x1b4 <main+0x124>
		red = 0x00;
 176:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <red+0x1>
 17a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <red>
		green = 0xFF;
 17e:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <green+0x1>
 182:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <green>
		blue = 0x00;
 186:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <blue+0x1>
 18a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <blue>
		caseNumber++;
 18e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 192:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 196:	01 96       	adiw	r24, 0x01	; 1
 198:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 19c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 1a0:	1f ef       	ldi	r17, 0xFF	; 255
 1a2:	84 e3       	ldi	r24, 0x34	; 52
 1a4:	9c e0       	ldi	r25, 0x0C	; 12
 1a6:	11 50       	subi	r17, 0x01	; 1
 1a8:	80 40       	sbci	r24, 0x00	; 0
 1aa:	90 40       	sbci	r25, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0x116>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x120>
 1b0:	00 00       	nop
 1b2:	d8 c0       	rjmp	.+432    	; 0x364 <main+0x2d4>
		_delay_ms(500);
	}
	else if (caseNumber == 3){ // yellow
 1b4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1b8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 1bc:	03 97       	sbiw	r24, 0x03	; 3
 1be:	f9 f4       	brne	.+62     	; 0x1fe <main+0x16e>
		red = 0xFF;
 1c0:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <red+0x1>
 1c4:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <red>
		green = 0xFF;
 1c8:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <green+0x1>
 1cc:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <green>
		blue = 0x00;
 1d0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <blue+0x1>
 1d4:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <blue>
		caseNumber++;
 1d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1dc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 1e0:	01 96       	adiw	r24, 0x01	; 1
 1e2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 1e6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 1ea:	1f ef       	ldi	r17, 0xFF	; 255
 1ec:	84 e3       	ldi	r24, 0x34	; 52
 1ee:	9c e0       	ldi	r25, 0x0C	; 12
 1f0:	11 50       	subi	r17, 0x01	; 1
 1f2:	80 40       	sbci	r24, 0x00	; 0
 1f4:	90 40       	sbci	r25, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <main+0x160>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0x16a>
 1fa:	00 00       	nop
 1fc:	b3 c0       	rjmp	.+358    	; 0x364 <main+0x2d4>
		_delay_ms(500);
	}
	else if (caseNumber == 4){ // orange
 1fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 202:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 206:	04 97       	sbiw	r24, 0x04	; 4
 208:	f9 f4       	brne	.+62     	; 0x248 <main+0x1b8>
		red = 88;
 20a:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <red+0x1>
 20e:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <red>
		green  = 5;
 212:	50 93 03 01 	sts	0x0103, r21	; 0x800103 <green+0x1>
 216:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <green>
		blue = 0x00;
 21a:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <blue+0x1>
 21e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <blue>
		caseNumber++;
 222:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 226:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 230:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 234:	1f ef       	ldi	r17, 0xFF	; 255
 236:	84 e3       	ldi	r24, 0x34	; 52
 238:	9c e0       	ldi	r25, 0x0C	; 12
 23a:	11 50       	subi	r17, 0x01	; 1
 23c:	80 40       	sbci	r24, 0x00	; 0
 23e:	90 40       	sbci	r25, 0x00	; 0
 240:	e1 f7       	brne	.-8      	; 0x23a <main+0x1aa>
 242:	00 c0       	rjmp	.+0      	; 0x244 <main+0x1b4>
 244:	00 00       	nop
 246:	8e c0       	rjmp	.+284    	; 0x364 <main+0x2d4>
		_delay_ms(500);
	}
	else if (caseNumber == 5){ // purple
 248:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 24c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 250:	05 97       	sbiw	r24, 0x05	; 5
 252:	f9 f4       	brne	.+62     	; 0x292 <main+0x202>
		red = 0xAD;
 254:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <red+0x1>
 258:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <red>
		green = 0x00;
 25c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <green+0x1>
 260:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <green>
		blue = 0xC4;
 264:	b0 93 05 01 	sts	0x0105, r27	; 0x800105 <blue+0x1>
 268:	a0 93 04 01 	sts	0x0104, r26	; 0x800104 <blue>
		caseNumber++;
 26c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 270:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 274:	01 96       	adiw	r24, 0x01	; 1
 276:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 27a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 27e:	1f ef       	ldi	r17, 0xFF	; 255
 280:	84 e3       	ldi	r24, 0x34	; 52
 282:	9c e0       	ldi	r25, 0x0C	; 12
 284:	11 50       	subi	r17, 0x01	; 1
 286:	80 40       	sbci	r24, 0x00	; 0
 288:	90 40       	sbci	r25, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0x1f4>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x1fe>
 28e:	00 00       	nop
 290:	69 c0       	rjmp	.+210    	; 0x364 <main+0x2d4>
		_delay_ms(500);
	}
	else if (caseNumber == 6){ // turquoise
 292:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 296:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 29a:	06 97       	sbiw	r24, 0x06	; 6
 29c:	f9 f4       	brne	.+62     	; 0x2dc <main+0x24c>
		red = 0x00;
 29e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <red+0x1>
 2a2:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <red>
		green = 0xE5;
 2a6:	f0 92 03 01 	sts	0x0103, r15	; 0x800103 <green+0x1>
 2aa:	e0 92 02 01 	sts	0x0102, r14	; 0x800102 <green>
		blue = 0xEE;
 2ae:	d0 92 05 01 	sts	0x0105, r13	; 0x800105 <blue+0x1>
 2b2:	c0 92 04 01 	sts	0x0104, r12	; 0x800104 <blue>
		caseNumber++;
 2b6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2ba:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 2be:	01 96       	adiw	r24, 0x01	; 1
 2c0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 2c4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 2c8:	1f ef       	ldi	r17, 0xFF	; 255
 2ca:	84 e3       	ldi	r24, 0x34	; 52
 2cc:	9c e0       	ldi	r25, 0x0C	; 12
 2ce:	11 50       	subi	r17, 0x01	; 1
 2d0:	80 40       	sbci	r24, 0x00	; 0
 2d2:	90 40       	sbci	r25, 0x00	; 0
 2d4:	e1 f7       	brne	.-8      	; 0x2ce <main+0x23e>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <main+0x248>
 2d8:	00 00       	nop
 2da:	44 c0       	rjmp	.+136    	; 0x364 <main+0x2d4>
		_delay_ms(500);
	}
	else if (caseNumber == 7){ // white
 2dc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2e0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 2e4:	07 97       	sbiw	r24, 0x07	; 7
 2e6:	f9 f4       	brne	.+62     	; 0x326 <main+0x296>
		red = 0xFF;
 2e8:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <red+0x1>
 2ec:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <red>
		green = 0xFF;
 2f0:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <green+0x1>
 2f4:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <green>
		blue = 0xFF;
 2f8:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <blue+0x1>
 2fc:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <blue>
		caseNumber++;
 300:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 304:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 308:	01 96       	adiw	r24, 0x01	; 1
 30a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 30e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 312:	1f ef       	ldi	r17, 0xFF	; 255
 314:	84 e3       	ldi	r24, 0x34	; 52
 316:	9c e0       	ldi	r25, 0x0C	; 12
 318:	11 50       	subi	r17, 0x01	; 1
 31a:	80 40       	sbci	r24, 0x00	; 0
 31c:	90 40       	sbci	r25, 0x00	; 0
 31e:	e1 f7       	brne	.-8      	; 0x318 <main+0x288>
 320:	00 c0       	rjmp	.+0      	; 0x322 <main+0x292>
 322:	00 00       	nop
 324:	1f c0       	rjmp	.+62     	; 0x364 <main+0x2d4>
		_delay_ms(500);
	}
	else if (caseNumber == 8){ // black
 326:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 32a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 32e:	08 97       	sbiw	r24, 0x08	; 8
 330:	c9 f4       	brne	.+50     	; 0x364 <main+0x2d4>
		red = 0x00;
 332:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <red+0x1>
 336:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <red>
		green = 0x00;
 33a:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <green+0x1>
 33e:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <green>
		blue = 0x00;
 342:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <blue+0x1>
 346:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <blue>
		caseNumber= 0;
 34a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 34e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 352:	1f ef       	ldi	r17, 0xFF	; 255
 354:	84 e3       	ldi	r24, 0x34	; 52
 356:	9c e0       	ldi	r25, 0x0C	; 12
 358:	11 50       	subi	r17, 0x01	; 1
 35a:	80 40       	sbci	r24, 0x00	; 0
 35c:	90 40       	sbci	r25, 0x00	; 0
 35e:	e1 f7       	brne	.-8      	; 0x358 <main+0x2c8>
 360:	00 c0       	rjmp	.+0      	; 0x362 <main+0x2d2>
 362:	00 00       	nop
		_delay_ms(500);
	}
	
	OCR0A = red;
 364:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <red>
 368:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <red+0x1>
 36c:	87 bd       	out	0x27, r24	; 39
	OCR2A = green;
 36e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <green>
 372:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <green+0x1>
 376:	80 83       	st	Z, r24
	OCR0B = blue;
 378:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <blue>
 37c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <blue+0x1>
 380:	88 bd       	out	0x28, r24	; 40
}
 382:	a9 ce       	rjmp	.-686    	; 0xd6 <main+0x46>

00000384 <_exit>:
 384:	f8 94       	cli

00000386 <__stop_program>:
 386:	ff cf       	rjmp	.-2      	; 0x386 <__stop_program>
