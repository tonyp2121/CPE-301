
DA_04_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000041e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000041e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000450  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000490  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000069d  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000604  00000000  00000000  00000b4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000028c  00000000  00000000  00001151  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000013e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000357  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000007c  00000000  00000000  0000175b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000017d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
		Initialize Registers we use (DDRD, DDRB for output And DDRD for input)
		
		
	*/
	float view = 0;
	DDRB = 0xFF;		// make Port B an output
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	84 b9       	out	0x04, r24	; 4
	DDRD = 0xFF;		// make Port D an output
  84:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0x0;			// make Port C an input (for ADC input)
  86:	17 b8       	out	0x07, r1	; 7
	DIDR0 = 0x1;		// disable digital input on ADC0 pin
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
	ADMUX = 0x0;		// Reference = Aref, ADC0 (PC.0) used as analog input
  8e:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
						// data is right-justified
	ADCSRA = 0x87;		// enable ADC, system clock used for A/D conversion
  92:	97 e8       	ldi	r25, 0x87	; 135
  94:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ADCSRB = 0x0;		// free running mode
  98:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	TCCR0A = (1 << COM0A1) | (1 << COM0B1) | (1 << WGM01) | (1 << WGM00) ; // non inverse phase correct PWM mode
  9c:	93 ea       	ldi	r25, 0xA3	; 163
  9e:	94 bd       	out	0x24, r25	; 36
	TCCR0B = (1 << CS00) ;  // no prescaler
  a0:	85 bd       	out	0x25, r24	; 37
	TCCR1A = _BV(COM1A1) | _BV(COM1B1) | _BV(WGM11);
  a2:	82 ea       	ldi	r24, 0xA2	; 162
  a4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = _BV(WGM13) | _BV(WGM12)| _BV(CS11);
  a8:	8a e1       	ldi	r24, 0x1A	; 26
  aa:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	ICR1 = (F_CPU/8)/50 -1;
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	9e e4       	ldi	r25, 0x4E	; 78
  b2:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
  b6:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	while (1) {
		ADCSRA |= (1 << ADSC);				// start conversion
  ba:	ca e7       	ldi	r28, 0x7A	; 122
  bc:	d0 e0       	ldi	r29, 0x00	; 0
		while ( (ADCSRA&(1<<ADIF)) == 0 ) ; // wait for conversion to finish
		view = ADC/4;
  be:	08 e7       	ldi	r16, 0x78	; 120
  c0:	10 e0       	ldi	r17, 0x00	; 0
			
		}
		else //backward
		{
			view = (ADC+512)/512*255;
			PORTB = 0x10;
  c2:	68 94       	set
  c4:	99 24       	eor	r9, r9
  c6:	94 f8       	bld	r9, 4
			OCR0A = view;
			
		}
		else //backward
		{
			view = (ADC+512)/512*255;
  c8:	aa 24       	eor	r10, r10
  ca:	aa 94       	dec	r10
		ADCSRA |= (1 << ADSC);				// start conversion
		while ( (ADCSRA&(1<<ADIF)) == 0 ) ; // wait for conversion to finish
		view = ADC/4;
		if (ADC >= 512) //forward
		{
			PORTB = 0x20;
  cc:	68 94       	set
  ce:	bb 24       	eor	r11, r11
  d0:	b5 f8       	bld	r11, 5
		{
			view = (ADC+512)/512*255;
			PORTB = 0x10;
			OCR0A = 255 - view;
		}
		OCR1B = (ADC) * 1400/1024 + 800; 
  d2:	0f 2e       	mov	r0, r31
  d4:	f8 e7       	ldi	r31, 0x78	; 120
  d6:	cf 2e       	mov	r12, r31
  d8:	f5 e0       	ldi	r31, 0x05	; 5
  da:	df 2e       	mov	r13, r31
  dc:	f0 2d       	mov	r31, r0
  de:	0f 2e       	mov	r0, r31
  e0:	fa e8       	ldi	r31, 0x8A	; 138
  e2:	ef 2e       	mov	r14, r31
  e4:	f1 2c       	mov	r15, r1
  e6:	f0 2d       	mov	r31, r0
	TCCR0B = (1 << CS00) ;  // no prescaler
	TCCR1A = _BV(COM1A1) | _BV(COM1B1) | _BV(WGM11);
	TCCR1B = _BV(WGM13) | _BV(WGM12)| _BV(CS11);
	ICR1 = (F_CPU/8)/50 -1;
	while (1) {
		ADCSRA |= (1 << ADSC);				// start conversion
  e8:	88 81       	ld	r24, Y
  ea:	80 64       	ori	r24, 0x40	; 64
  ec:	88 83       	st	Y, r24
		while ( (ADCSRA&(1<<ADIF)) == 0 ) ; // wait for conversion to finish
  ee:	88 81       	ld	r24, Y
  f0:	84 ff       	sbrs	r24, 4
  f2:	fd cf       	rjmp	.-6      	; 0xee <main+0x6e>
		view = ADC/4;
  f4:	f8 01       	movw	r30, r16
  f6:	80 81       	ld	r24, Z
  f8:	91 81       	ldd	r25, Z+1	; 0x01
		if (ADC >= 512) //forward
  fa:	20 81       	ld	r18, Z
  fc:	31 81       	ldd	r19, Z+1	; 0x01
  fe:	21 15       	cp	r18, r1
 100:	32 40       	sbci	r19, 0x02	; 2
 102:	38 f0       	brcs	.+14     	; 0x112 <main+0x92>
		{
			PORTB = 0x20;
 104:	b5 b8       	out	0x05, r11	; 5
	TCCR1B = _BV(WGM13) | _BV(WGM12)| _BV(CS11);
	ICR1 = (F_CPU/8)/50 -1;
	while (1) {
		ADCSRA |= (1 << ADSC);				// start conversion
		while ( (ADCSRA&(1<<ADIF)) == 0 ) ; // wait for conversion to finish
		view = ADC/4;
 106:	96 95       	lsr	r25
 108:	87 95       	ror	r24
 10a:	96 95       	lsr	r25
 10c:	87 95       	ror	r24
		if (ADC >= 512) //forward
		{
			PORTB = 0x20;
			OCR0A = view;
 10e:	87 bd       	out	0x27, r24	; 39
 110:	1c c0       	rjmp	.+56     	; 0x14a <main+0xca>
			
		}
		else //backward
		{
			view = (ADC+512)/512*255;
 112:	f8 01       	movw	r30, r16
 114:	80 81       	ld	r24, Z
 116:	91 81       	ldd	r25, Z+1	; 0x01
			PORTB = 0x10;
 118:	95 b8       	out	0x05, r9	; 5
			OCR0A = view;
			
		}
		else //backward
		{
			view = (ADC+512)/512*255;
 11a:	9e 5f       	subi	r25, 0xFE	; 254
 11c:	89 2f       	mov	r24, r25
 11e:	99 27       	eor	r25, r25
 120:	86 95       	lsr	r24
 122:	a8 9e       	mul	r10, r24
 124:	b0 01       	movw	r22, r0
 126:	a9 9e       	mul	r10, r25
 128:	70 0d       	add	r23, r0
 12a:	11 24       	eor	r1, r1
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 55 01 	call	0x2aa	; 0x2aa <__floatunsisf>
 134:	9b 01       	movw	r18, r22
 136:	ac 01       	movw	r20, r24
			PORTB = 0x10;
			OCR0A = 255 - view;
 138:	60 e0       	ldi	r22, 0x00	; 0
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	8f e7       	ldi	r24, 0x7F	; 127
 13e:	93 e4       	ldi	r25, 0x43	; 67
 140:	0e 94 b9 00 	call	0x172	; 0x172 <__subsf3>
 144:	0e 94 26 01 	call	0x24c	; 0x24c <__fixunssfsi>
 148:	67 bd       	out	0x27, r22	; 39
		}
		OCR1B = (ADC) * 1400/1024 + 800; 
 14a:	f8 01       	movw	r30, r16
 14c:	20 81       	ld	r18, Z
 14e:	31 81       	ldd	r19, Z+1	; 0x01
 150:	2c 9d       	mul	r18, r12
 152:	c0 01       	movw	r24, r0
 154:	2d 9d       	mul	r18, r13
 156:	90 0d       	add	r25, r0
 158:	3c 9d       	mul	r19, r12
 15a:	90 0d       	add	r25, r0
 15c:	11 24       	eor	r1, r1
 15e:	89 2f       	mov	r24, r25
 160:	99 27       	eor	r25, r25
 162:	86 95       	lsr	r24
 164:	86 95       	lsr	r24
 166:	80 5e       	subi	r24, 0xE0	; 224
 168:	9c 4f       	sbci	r25, 0xFC	; 252
 16a:	f7 01       	movw	r30, r14
 16c:	91 83       	std	Z+1, r25	; 0x01
 16e:	80 83       	st	Z, r24
	} 
 170:	bb cf       	rjmp	.-138    	; 0xe8 <main+0x68>

00000172 <__subsf3>:
 172:	50 58       	subi	r21, 0x80	; 128

00000174 <__addsf3>:
 174:	bb 27       	eor	r27, r27
 176:	aa 27       	eor	r26, r26
 178:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <__addsf3x>
 17c:	0c 94 a9 01 	jmp	0x352	; 0x352 <__fp_round>
 180:	0e 94 9b 01 	call	0x336	; 0x336 <__fp_pscA>
 184:	38 f0       	brcs	.+14     	; 0x194 <__addsf3+0x20>
 186:	0e 94 a2 01 	call	0x344	; 0x344 <__fp_pscB>
 18a:	20 f0       	brcs	.+8      	; 0x194 <__addsf3+0x20>
 18c:	39 f4       	brne	.+14     	; 0x19c <__addsf3+0x28>
 18e:	9f 3f       	cpi	r25, 0xFF	; 255
 190:	19 f4       	brne	.+6      	; 0x198 <__addsf3+0x24>
 192:	26 f4       	brtc	.+8      	; 0x19c <__addsf3+0x28>
 194:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_nan>
 198:	0e f4       	brtc	.+2      	; 0x19c <__addsf3+0x28>
 19a:	e0 95       	com	r30
 19c:	e7 fb       	bst	r30, 7
 19e:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_inf>

000001a2 <__addsf3x>:
 1a2:	e9 2f       	mov	r30, r25
 1a4:	0e 94 ba 01 	call	0x374	; 0x374 <__fp_split3>
 1a8:	58 f3       	brcs	.-42     	; 0x180 <__addsf3+0xc>
 1aa:	ba 17       	cp	r27, r26
 1ac:	62 07       	cpc	r22, r18
 1ae:	73 07       	cpc	r23, r19
 1b0:	84 07       	cpc	r24, r20
 1b2:	95 07       	cpc	r25, r21
 1b4:	20 f0       	brcs	.+8      	; 0x1be <__addsf3x+0x1c>
 1b6:	79 f4       	brne	.+30     	; 0x1d6 <__addsf3x+0x34>
 1b8:	a6 f5       	brtc	.+104    	; 0x222 <__addsf3x+0x80>
 1ba:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__fp_zero>
 1be:	0e f4       	brtc	.+2      	; 0x1c2 <__addsf3x+0x20>
 1c0:	e0 95       	com	r30
 1c2:	0b 2e       	mov	r0, r27
 1c4:	ba 2f       	mov	r27, r26
 1c6:	a0 2d       	mov	r26, r0
 1c8:	0b 01       	movw	r0, r22
 1ca:	b9 01       	movw	r22, r18
 1cc:	90 01       	movw	r18, r0
 1ce:	0c 01       	movw	r0, r24
 1d0:	ca 01       	movw	r24, r20
 1d2:	a0 01       	movw	r20, r0
 1d4:	11 24       	eor	r1, r1
 1d6:	ff 27       	eor	r31, r31
 1d8:	59 1b       	sub	r21, r25
 1da:	99 f0       	breq	.+38     	; 0x202 <__addsf3x+0x60>
 1dc:	59 3f       	cpi	r21, 0xF9	; 249
 1de:	50 f4       	brcc	.+20     	; 0x1f4 <__addsf3x+0x52>
 1e0:	50 3e       	cpi	r21, 0xE0	; 224
 1e2:	68 f1       	brcs	.+90     	; 0x23e <__addsf3x+0x9c>
 1e4:	1a 16       	cp	r1, r26
 1e6:	f0 40       	sbci	r31, 0x00	; 0
 1e8:	a2 2f       	mov	r26, r18
 1ea:	23 2f       	mov	r18, r19
 1ec:	34 2f       	mov	r19, r20
 1ee:	44 27       	eor	r20, r20
 1f0:	58 5f       	subi	r21, 0xF8	; 248
 1f2:	f3 cf       	rjmp	.-26     	; 0x1da <__addsf3x+0x38>
 1f4:	46 95       	lsr	r20
 1f6:	37 95       	ror	r19
 1f8:	27 95       	ror	r18
 1fa:	a7 95       	ror	r26
 1fc:	f0 40       	sbci	r31, 0x00	; 0
 1fe:	53 95       	inc	r21
 200:	c9 f7       	brne	.-14     	; 0x1f4 <__addsf3x+0x52>
 202:	7e f4       	brtc	.+30     	; 0x222 <__addsf3x+0x80>
 204:	1f 16       	cp	r1, r31
 206:	ba 0b       	sbc	r27, r26
 208:	62 0b       	sbc	r22, r18
 20a:	73 0b       	sbc	r23, r19
 20c:	84 0b       	sbc	r24, r20
 20e:	ba f0       	brmi	.+46     	; 0x23e <__addsf3x+0x9c>
 210:	91 50       	subi	r25, 0x01	; 1
 212:	a1 f0       	breq	.+40     	; 0x23c <__addsf3x+0x9a>
 214:	ff 0f       	add	r31, r31
 216:	bb 1f       	adc	r27, r27
 218:	66 1f       	adc	r22, r22
 21a:	77 1f       	adc	r23, r23
 21c:	88 1f       	adc	r24, r24
 21e:	c2 f7       	brpl	.-16     	; 0x210 <__addsf3x+0x6e>
 220:	0e c0       	rjmp	.+28     	; 0x23e <__addsf3x+0x9c>
 222:	ba 0f       	add	r27, r26
 224:	62 1f       	adc	r22, r18
 226:	73 1f       	adc	r23, r19
 228:	84 1f       	adc	r24, r20
 22a:	48 f4       	brcc	.+18     	; 0x23e <__addsf3x+0x9c>
 22c:	87 95       	ror	r24
 22e:	77 95       	ror	r23
 230:	67 95       	ror	r22
 232:	b7 95       	ror	r27
 234:	f7 95       	ror	r31
 236:	9e 3f       	cpi	r25, 0xFE	; 254
 238:	08 f0       	brcs	.+2      	; 0x23c <__addsf3x+0x9a>
 23a:	b0 cf       	rjmp	.-160    	; 0x19c <__addsf3+0x28>
 23c:	93 95       	inc	r25
 23e:	88 0f       	add	r24, r24
 240:	08 f0       	brcs	.+2      	; 0x244 <__addsf3x+0xa2>
 242:	99 27       	eor	r25, r25
 244:	ee 0f       	add	r30, r30
 246:	97 95       	ror	r25
 248:	87 95       	ror	r24
 24a:	08 95       	ret

0000024c <__fixunssfsi>:
 24c:	0e 94 c2 01 	call	0x384	; 0x384 <__fp_splitA>
 250:	88 f0       	brcs	.+34     	; 0x274 <__fixunssfsi+0x28>
 252:	9f 57       	subi	r25, 0x7F	; 127
 254:	98 f0       	brcs	.+38     	; 0x27c <__fixunssfsi+0x30>
 256:	b9 2f       	mov	r27, r25
 258:	99 27       	eor	r25, r25
 25a:	b7 51       	subi	r27, 0x17	; 23
 25c:	b0 f0       	brcs	.+44     	; 0x28a <__fixunssfsi+0x3e>
 25e:	e1 f0       	breq	.+56     	; 0x298 <__fixunssfsi+0x4c>
 260:	66 0f       	add	r22, r22
 262:	77 1f       	adc	r23, r23
 264:	88 1f       	adc	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	1a f0       	brmi	.+6      	; 0x270 <__fixunssfsi+0x24>
 26a:	ba 95       	dec	r27
 26c:	c9 f7       	brne	.-14     	; 0x260 <__fixunssfsi+0x14>
 26e:	14 c0       	rjmp	.+40     	; 0x298 <__fixunssfsi+0x4c>
 270:	b1 30       	cpi	r27, 0x01	; 1
 272:	91 f0       	breq	.+36     	; 0x298 <__fixunssfsi+0x4c>
 274:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__fp_zero>
 278:	b1 e0       	ldi	r27, 0x01	; 1
 27a:	08 95       	ret
 27c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__fp_zero>
 280:	67 2f       	mov	r22, r23
 282:	78 2f       	mov	r23, r24
 284:	88 27       	eor	r24, r24
 286:	b8 5f       	subi	r27, 0xF8	; 248
 288:	39 f0       	breq	.+14     	; 0x298 <__fixunssfsi+0x4c>
 28a:	b9 3f       	cpi	r27, 0xF9	; 249
 28c:	cc f3       	brlt	.-14     	; 0x280 <__fixunssfsi+0x34>
 28e:	86 95       	lsr	r24
 290:	77 95       	ror	r23
 292:	67 95       	ror	r22
 294:	b3 95       	inc	r27
 296:	d9 f7       	brne	.-10     	; 0x28e <__fixunssfsi+0x42>
 298:	3e f4       	brtc	.+14     	; 0x2a8 <__fixunssfsi+0x5c>
 29a:	90 95       	com	r25
 29c:	80 95       	com	r24
 29e:	70 95       	com	r23
 2a0:	61 95       	neg	r22
 2a2:	7f 4f       	sbci	r23, 0xFF	; 255
 2a4:	8f 4f       	sbci	r24, 0xFF	; 255
 2a6:	9f 4f       	sbci	r25, 0xFF	; 255
 2a8:	08 95       	ret

000002aa <__floatunsisf>:
 2aa:	e8 94       	clt
 2ac:	09 c0       	rjmp	.+18     	; 0x2c0 <__floatsisf+0x12>

000002ae <__floatsisf>:
 2ae:	97 fb       	bst	r25, 7
 2b0:	3e f4       	brtc	.+14     	; 0x2c0 <__floatsisf+0x12>
 2b2:	90 95       	com	r25
 2b4:	80 95       	com	r24
 2b6:	70 95       	com	r23
 2b8:	61 95       	neg	r22
 2ba:	7f 4f       	sbci	r23, 0xFF	; 255
 2bc:	8f 4f       	sbci	r24, 0xFF	; 255
 2be:	9f 4f       	sbci	r25, 0xFF	; 255
 2c0:	99 23       	and	r25, r25
 2c2:	a9 f0       	breq	.+42     	; 0x2ee <__floatsisf+0x40>
 2c4:	f9 2f       	mov	r31, r25
 2c6:	96 e9       	ldi	r25, 0x96	; 150
 2c8:	bb 27       	eor	r27, r27
 2ca:	93 95       	inc	r25
 2cc:	f6 95       	lsr	r31
 2ce:	87 95       	ror	r24
 2d0:	77 95       	ror	r23
 2d2:	67 95       	ror	r22
 2d4:	b7 95       	ror	r27
 2d6:	f1 11       	cpse	r31, r1
 2d8:	f8 cf       	rjmp	.-16     	; 0x2ca <__floatsisf+0x1c>
 2da:	fa f4       	brpl	.+62     	; 0x31a <__floatsisf+0x6c>
 2dc:	bb 0f       	add	r27, r27
 2de:	11 f4       	brne	.+4      	; 0x2e4 <__floatsisf+0x36>
 2e0:	60 ff       	sbrs	r22, 0
 2e2:	1b c0       	rjmp	.+54     	; 0x31a <__floatsisf+0x6c>
 2e4:	6f 5f       	subi	r22, 0xFF	; 255
 2e6:	7f 4f       	sbci	r23, 0xFF	; 255
 2e8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ea:	9f 4f       	sbci	r25, 0xFF	; 255
 2ec:	16 c0       	rjmp	.+44     	; 0x31a <__floatsisf+0x6c>
 2ee:	88 23       	and	r24, r24
 2f0:	11 f0       	breq	.+4      	; 0x2f6 <__floatsisf+0x48>
 2f2:	96 e9       	ldi	r25, 0x96	; 150
 2f4:	11 c0       	rjmp	.+34     	; 0x318 <__floatsisf+0x6a>
 2f6:	77 23       	and	r23, r23
 2f8:	21 f0       	breq	.+8      	; 0x302 <__floatsisf+0x54>
 2fa:	9e e8       	ldi	r25, 0x8E	; 142
 2fc:	87 2f       	mov	r24, r23
 2fe:	76 2f       	mov	r23, r22
 300:	05 c0       	rjmp	.+10     	; 0x30c <__floatsisf+0x5e>
 302:	66 23       	and	r22, r22
 304:	71 f0       	breq	.+28     	; 0x322 <__floatsisf+0x74>
 306:	96 e8       	ldi	r25, 0x86	; 134
 308:	86 2f       	mov	r24, r22
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	2a f0       	brmi	.+10     	; 0x31a <__floatsisf+0x6c>
 310:	9a 95       	dec	r25
 312:	66 0f       	add	r22, r22
 314:	77 1f       	adc	r23, r23
 316:	88 1f       	adc	r24, r24
 318:	da f7       	brpl	.-10     	; 0x310 <__floatsisf+0x62>
 31a:	88 0f       	add	r24, r24
 31c:	96 95       	lsr	r25
 31e:	87 95       	ror	r24
 320:	97 f9       	bld	r25, 7
 322:	08 95       	ret

00000324 <__fp_inf>:
 324:	97 f9       	bld	r25, 7
 326:	9f 67       	ori	r25, 0x7F	; 127
 328:	80 e8       	ldi	r24, 0x80	; 128
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	60 e0       	ldi	r22, 0x00	; 0
 32e:	08 95       	ret

00000330 <__fp_nan>:
 330:	9f ef       	ldi	r25, 0xFF	; 255
 332:	80 ec       	ldi	r24, 0xC0	; 192
 334:	08 95       	ret

00000336 <__fp_pscA>:
 336:	00 24       	eor	r0, r0
 338:	0a 94       	dec	r0
 33a:	16 16       	cp	r1, r22
 33c:	17 06       	cpc	r1, r23
 33e:	18 06       	cpc	r1, r24
 340:	09 06       	cpc	r0, r25
 342:	08 95       	ret

00000344 <__fp_pscB>:
 344:	00 24       	eor	r0, r0
 346:	0a 94       	dec	r0
 348:	12 16       	cp	r1, r18
 34a:	13 06       	cpc	r1, r19
 34c:	14 06       	cpc	r1, r20
 34e:	05 06       	cpc	r0, r21
 350:	08 95       	ret

00000352 <__fp_round>:
 352:	09 2e       	mov	r0, r25
 354:	03 94       	inc	r0
 356:	00 0c       	add	r0, r0
 358:	11 f4       	brne	.+4      	; 0x35e <__fp_round+0xc>
 35a:	88 23       	and	r24, r24
 35c:	52 f0       	brmi	.+20     	; 0x372 <__fp_round+0x20>
 35e:	bb 0f       	add	r27, r27
 360:	40 f4       	brcc	.+16     	; 0x372 <__fp_round+0x20>
 362:	bf 2b       	or	r27, r31
 364:	11 f4       	brne	.+4      	; 0x36a <__fp_round+0x18>
 366:	60 ff       	sbrs	r22, 0
 368:	04 c0       	rjmp	.+8      	; 0x372 <__fp_round+0x20>
 36a:	6f 5f       	subi	r22, 0xFF	; 255
 36c:	7f 4f       	sbci	r23, 0xFF	; 255
 36e:	8f 4f       	sbci	r24, 0xFF	; 255
 370:	9f 4f       	sbci	r25, 0xFF	; 255
 372:	08 95       	ret

00000374 <__fp_split3>:
 374:	57 fd       	sbrc	r21, 7
 376:	90 58       	subi	r25, 0x80	; 128
 378:	44 0f       	add	r20, r20
 37a:	55 1f       	adc	r21, r21
 37c:	59 f0       	breq	.+22     	; 0x394 <__fp_splitA+0x10>
 37e:	5f 3f       	cpi	r21, 0xFF	; 255
 380:	71 f0       	breq	.+28     	; 0x39e <__fp_splitA+0x1a>
 382:	47 95       	ror	r20

00000384 <__fp_splitA>:
 384:	88 0f       	add	r24, r24
 386:	97 fb       	bst	r25, 7
 388:	99 1f       	adc	r25, r25
 38a:	61 f0       	breq	.+24     	; 0x3a4 <__fp_splitA+0x20>
 38c:	9f 3f       	cpi	r25, 0xFF	; 255
 38e:	79 f0       	breq	.+30     	; 0x3ae <__fp_splitA+0x2a>
 390:	87 95       	ror	r24
 392:	08 95       	ret
 394:	12 16       	cp	r1, r18
 396:	13 06       	cpc	r1, r19
 398:	14 06       	cpc	r1, r20
 39a:	55 1f       	adc	r21, r21
 39c:	f2 cf       	rjmp	.-28     	; 0x382 <__fp_split3+0xe>
 39e:	46 95       	lsr	r20
 3a0:	f1 df       	rcall	.-30     	; 0x384 <__fp_splitA>
 3a2:	08 c0       	rjmp	.+16     	; 0x3b4 <__fp_splitA+0x30>
 3a4:	16 16       	cp	r1, r22
 3a6:	17 06       	cpc	r1, r23
 3a8:	18 06       	cpc	r1, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	f1 cf       	rjmp	.-30     	; 0x390 <__fp_splitA+0xc>
 3ae:	86 95       	lsr	r24
 3b0:	71 05       	cpc	r23, r1
 3b2:	61 05       	cpc	r22, r1
 3b4:	08 94       	sec
 3b6:	08 95       	ret

000003b8 <__fp_zero>:
 3b8:	e8 94       	clt

000003ba <__fp_szero>:
 3ba:	bb 27       	eor	r27, r27
 3bc:	66 27       	eor	r22, r22
 3be:	77 27       	eor	r23, r23
 3c0:	cb 01       	movw	r24, r22
 3c2:	97 f9       	bld	r25, 7
 3c4:	08 95       	ret

000003c6 <_exit>:
 3c6:	f8 94       	cli

000003c8 <__stop_program>:
 3c8:	ff cf       	rjmp	.-2      	; 0x3c8 <__stop_program>
