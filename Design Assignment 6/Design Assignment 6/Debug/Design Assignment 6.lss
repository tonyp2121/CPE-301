
Design Assignment 6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000040a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003b6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000040a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000043c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  0000047c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000932  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000075a  00000000  00000000  00000dee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000341  00000000  00000000  00001548  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  0000188c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003eb  00000000  00000000  000018f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002a0  00000000  00000000  00001cdb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00001f7b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 5d 00 	call	0xba	; 0xba <main>
  78:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <initUART>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  80:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  84:	83 e3       	ldi	r24, 0x33	; 51
  86:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  8a:	e1 ec       	ldi	r30, 0xC1	; 193
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	88 61       	ori	r24, 0x18	; 24
  92:	80 83       	st	Z, r24
  94:	e2 ec       	ldi	r30, 0xC2	; 194
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	86 60       	ori	r24, 0x06	; 6
  9c:	80 83       	st	Z, r24
  9e:	08 95       	ret

000000a0 <writeInt>:
	UDR0 = c;									// Display character on serial (i.e., PuTTY) terminal
	_delay_ms(200);
}

void writeInt(unsigned int i) {
	UDR0 = i + 0x30;									// Display character on serial (i.e., PuTTY) terminal
  a0:	80 5d       	subi	r24, 0xD0	; 208
  a2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  a6:	2f ef       	ldi	r18, 0xFF	; 255
  a8:	81 ee       	ldi	r24, 0xE1	; 225
  aa:	94 e0       	ldi	r25, 0x04	; 4
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	80 40       	sbci	r24, 0x00	; 0
  b0:	90 40       	sbci	r25, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <writeInt+0xc>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <writeInt+0x16>
  b6:	00 00       	nop
  b8:	08 95       	ret

000000ba <main>:
int main( void )
{
	//unsigned char ch = 'A';
	unsigned int test = 1;
	float test2;
	DDRC = 0x0; // make Port C an input (for ADC input)
  ba:	17 b8       	out	0x07, r1	; 7
	DIDR0 = 0x1;
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
	ADMUX = 0x0;
  c2:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = 0x87;		// enable ADC, system clock used for A/D conversion
  c6:	87 e8       	ldi	r24, 0x87	; 135
  c8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ADCSRB = 0x0;		// free running mode
  cc:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>

	initUART();
  d0:	0e 94 40 00 	call	0x80	; 0x80 <initUART>
	while (1) {
		ADCSRA |= (1 << ADSC);				// start conversion
  d4:	ca e7       	ldi	r28, 0x7A	; 122
  d6:	d0 e0       	ldi	r29, 0x00	; 0
		while ( (ADCSRA&(1<<ADIF)) == 0 ) ;
		test2 = ADC/1024.0;
  d8:	0f 2e       	mov	r0, r31
  da:	f8 e7       	ldi	r31, 0x78	; 120
  dc:	ef 2e       	mov	r14, r31
  de:	f1 2c       	mov	r15, r1
  e0:	f0 2d       	mov	r31, r0
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);		// Enable receiver and transmitter
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00);		// Set data frame: 8 data bits, 1 stop bit, no parity
}

void writeChar(unsigned char c) {
	UDR0 = c;									// Display character on serial (i.e., PuTTY) terminal
  e2:	06 ec       	ldi	r16, 0xC6	; 198
  e4:	10 e0       	ldi	r17, 0x00	; 0
  e6:	0f 2e       	mov	r0, r31
  e8:	f6 e5       	ldi	r31, 0x56	; 86
  ea:	cf 2e       	mov	r12, r31
  ec:	f0 2d       	mov	r31, r0
  ee:	68 94       	set
  f0:	dd 24       	eor	r13, r13
  f2:	d5 f8       	bld	r13, 5
	ADCSRA = 0x87;		// enable ADC, system clock used for A/D conversion
	ADCSRB = 0x0;		// free running mode

	initUART();
	while (1) {
		ADCSRA |= (1 << ADSC);				// start conversion
  f4:	88 81       	ld	r24, Y
  f6:	80 64       	ori	r24, 0x40	; 64
  f8:	88 83       	st	Y, r24
		while ( (ADCSRA&(1<<ADIF)) == 0 ) ;
  fa:	88 81       	ld	r24, Y
  fc:	84 ff       	sbrs	r24, 4
  fe:	fd cf       	rjmp	.-6      	; 0xfa <main+0x40>
		test2 = ADC/1024.0;
 100:	f7 01       	movw	r30, r14
 102:	60 81       	ld	r22, Z
 104:	71 81       	ldd	r23, Z+1	; 0x01
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	0e 94 de 00 	call	0x1bc	; 0x1bc <__floatunsisf>
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	40 e8       	ldi	r20, 0x80	; 128
 114:	5a e3       	ldi	r21, 0x3A	; 58
 116:	0e 94 44 01 	call	0x288	; 0x288 <__mulsf3>
		test2 = test2 * 5;
		test = test2;
	
		
		writeInt(test);
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	40 ea       	ldi	r20, 0xA0	; 160
 120:	50 e4       	ldi	r21, 0x40	; 64
 122:	0e 94 44 01 	call	0x288	; 0x288 <__mulsf3>
 126:	0e 94 af 00 	call	0x15e	; 0x15e <__fixunssfsi>
 12a:	cb 01       	movw	r24, r22
 12c:	0e 94 50 00 	call	0xa0	; 0xa0 <writeInt>
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);		// Enable receiver and transmitter
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00);		// Set data frame: 8 data bits, 1 stop bit, no parity
}

void writeChar(unsigned char c) {
	UDR0 = c;									// Display character on serial (i.e., PuTTY) terminal
 130:	f8 01       	movw	r30, r16
 132:	c0 82       	st	Z, r12
 134:	ff ef       	ldi	r31, 0xFF	; 255
 136:	21 ee       	ldi	r18, 0xE1	; 225
 138:	84 e0       	ldi	r24, 0x04	; 4
 13a:	f1 50       	subi	r31, 0x01	; 1
 13c:	20 40       	sbci	r18, 0x00	; 0
 13e:	80 40       	sbci	r24, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0x80>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0x8a>
 144:	00 00       	nop
 146:	f8 01       	movw	r30, r16
 148:	d0 82       	st	Z, r13
 14a:	ff ef       	ldi	r31, 0xFF	; 255
 14c:	21 ee       	ldi	r18, 0xE1	; 225
 14e:	84 e0       	ldi	r24, 0x04	; 4
 150:	f1 50       	subi	r31, 0x01	; 1
 152:	20 40       	sbci	r18, 0x00	; 0
 154:	80 40       	sbci	r24, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x96>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0xa0>
 15a:	00 00       	nop
 15c:	cb cf       	rjmp	.-106    	; 0xf4 <main+0x3a>

0000015e <__fixunssfsi>:
 15e:	0e 94 23 01 	call	0x246	; 0x246 <__fp_splitA>
 162:	88 f0       	brcs	.+34     	; 0x186 <__fixunssfsi+0x28>
 164:	9f 57       	subi	r25, 0x7F	; 127
 166:	98 f0       	brcs	.+38     	; 0x18e <__fixunssfsi+0x30>
 168:	b9 2f       	mov	r27, r25
 16a:	99 27       	eor	r25, r25
 16c:	b7 51       	subi	r27, 0x17	; 23
 16e:	b0 f0       	brcs	.+44     	; 0x19c <__fixunssfsi+0x3e>
 170:	e1 f0       	breq	.+56     	; 0x1aa <__fixunssfsi+0x4c>
 172:	66 0f       	add	r22, r22
 174:	77 1f       	adc	r23, r23
 176:	88 1f       	adc	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	1a f0       	brmi	.+6      	; 0x182 <__fixunssfsi+0x24>
 17c:	ba 95       	dec	r27
 17e:	c9 f7       	brne	.-14     	; 0x172 <__fixunssfsi+0x14>
 180:	14 c0       	rjmp	.+40     	; 0x1aa <__fixunssfsi+0x4c>
 182:	b1 30       	cpi	r27, 0x01	; 1
 184:	91 f0       	breq	.+36     	; 0x1aa <__fixunssfsi+0x4c>
 186:	0e 94 3d 01 	call	0x27a	; 0x27a <__fp_zero>
 18a:	b1 e0       	ldi	r27, 0x01	; 1
 18c:	08 95       	ret
 18e:	0c 94 3d 01 	jmp	0x27a	; 0x27a <__fp_zero>
 192:	67 2f       	mov	r22, r23
 194:	78 2f       	mov	r23, r24
 196:	88 27       	eor	r24, r24
 198:	b8 5f       	subi	r27, 0xF8	; 248
 19a:	39 f0       	breq	.+14     	; 0x1aa <__fixunssfsi+0x4c>
 19c:	b9 3f       	cpi	r27, 0xF9	; 249
 19e:	cc f3       	brlt	.-14     	; 0x192 <__fixunssfsi+0x34>
 1a0:	86 95       	lsr	r24
 1a2:	77 95       	ror	r23
 1a4:	67 95       	ror	r22
 1a6:	b3 95       	inc	r27
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <__fixunssfsi+0x42>
 1aa:	3e f4       	brtc	.+14     	; 0x1ba <__fixunssfsi+0x5c>
 1ac:	90 95       	com	r25
 1ae:	80 95       	com	r24
 1b0:	70 95       	com	r23
 1b2:	61 95       	neg	r22
 1b4:	7f 4f       	sbci	r23, 0xFF	; 255
 1b6:	8f 4f       	sbci	r24, 0xFF	; 255
 1b8:	9f 4f       	sbci	r25, 0xFF	; 255
 1ba:	08 95       	ret

000001bc <__floatunsisf>:
 1bc:	e8 94       	clt
 1be:	09 c0       	rjmp	.+18     	; 0x1d2 <__floatsisf+0x12>

000001c0 <__floatsisf>:
 1c0:	97 fb       	bst	r25, 7
 1c2:	3e f4       	brtc	.+14     	; 0x1d2 <__floatsisf+0x12>
 1c4:	90 95       	com	r25
 1c6:	80 95       	com	r24
 1c8:	70 95       	com	r23
 1ca:	61 95       	neg	r22
 1cc:	7f 4f       	sbci	r23, 0xFF	; 255
 1ce:	8f 4f       	sbci	r24, 0xFF	; 255
 1d0:	9f 4f       	sbci	r25, 0xFF	; 255
 1d2:	99 23       	and	r25, r25
 1d4:	a9 f0       	breq	.+42     	; 0x200 <__floatsisf+0x40>
 1d6:	f9 2f       	mov	r31, r25
 1d8:	96 e9       	ldi	r25, 0x96	; 150
 1da:	bb 27       	eor	r27, r27
 1dc:	93 95       	inc	r25
 1de:	f6 95       	lsr	r31
 1e0:	87 95       	ror	r24
 1e2:	77 95       	ror	r23
 1e4:	67 95       	ror	r22
 1e6:	b7 95       	ror	r27
 1e8:	f1 11       	cpse	r31, r1
 1ea:	f8 cf       	rjmp	.-16     	; 0x1dc <__floatsisf+0x1c>
 1ec:	fa f4       	brpl	.+62     	; 0x22c <__floatsisf+0x6c>
 1ee:	bb 0f       	add	r27, r27
 1f0:	11 f4       	brne	.+4      	; 0x1f6 <__floatsisf+0x36>
 1f2:	60 ff       	sbrs	r22, 0
 1f4:	1b c0       	rjmp	.+54     	; 0x22c <__floatsisf+0x6c>
 1f6:	6f 5f       	subi	r22, 0xFF	; 255
 1f8:	7f 4f       	sbci	r23, 0xFF	; 255
 1fa:	8f 4f       	sbci	r24, 0xFF	; 255
 1fc:	9f 4f       	sbci	r25, 0xFF	; 255
 1fe:	16 c0       	rjmp	.+44     	; 0x22c <__floatsisf+0x6c>
 200:	88 23       	and	r24, r24
 202:	11 f0       	breq	.+4      	; 0x208 <__floatsisf+0x48>
 204:	96 e9       	ldi	r25, 0x96	; 150
 206:	11 c0       	rjmp	.+34     	; 0x22a <__floatsisf+0x6a>
 208:	77 23       	and	r23, r23
 20a:	21 f0       	breq	.+8      	; 0x214 <__floatsisf+0x54>
 20c:	9e e8       	ldi	r25, 0x8E	; 142
 20e:	87 2f       	mov	r24, r23
 210:	76 2f       	mov	r23, r22
 212:	05 c0       	rjmp	.+10     	; 0x21e <__floatsisf+0x5e>
 214:	66 23       	and	r22, r22
 216:	71 f0       	breq	.+28     	; 0x234 <__floatsisf+0x74>
 218:	96 e8       	ldi	r25, 0x86	; 134
 21a:	86 2f       	mov	r24, r22
 21c:	70 e0       	ldi	r23, 0x00	; 0
 21e:	60 e0       	ldi	r22, 0x00	; 0
 220:	2a f0       	brmi	.+10     	; 0x22c <__floatsisf+0x6c>
 222:	9a 95       	dec	r25
 224:	66 0f       	add	r22, r22
 226:	77 1f       	adc	r23, r23
 228:	88 1f       	adc	r24, r24
 22a:	da f7       	brpl	.-10     	; 0x222 <__floatsisf+0x62>
 22c:	88 0f       	add	r24, r24
 22e:	96 95       	lsr	r25
 230:	87 95       	ror	r24
 232:	97 f9       	bld	r25, 7
 234:	08 95       	ret

00000236 <__fp_split3>:
 236:	57 fd       	sbrc	r21, 7
 238:	90 58       	subi	r25, 0x80	; 128
 23a:	44 0f       	add	r20, r20
 23c:	55 1f       	adc	r21, r21
 23e:	59 f0       	breq	.+22     	; 0x256 <__fp_splitA+0x10>
 240:	5f 3f       	cpi	r21, 0xFF	; 255
 242:	71 f0       	breq	.+28     	; 0x260 <__fp_splitA+0x1a>
 244:	47 95       	ror	r20

00000246 <__fp_splitA>:
 246:	88 0f       	add	r24, r24
 248:	97 fb       	bst	r25, 7
 24a:	99 1f       	adc	r25, r25
 24c:	61 f0       	breq	.+24     	; 0x266 <__fp_splitA+0x20>
 24e:	9f 3f       	cpi	r25, 0xFF	; 255
 250:	79 f0       	breq	.+30     	; 0x270 <__fp_splitA+0x2a>
 252:	87 95       	ror	r24
 254:	08 95       	ret
 256:	12 16       	cp	r1, r18
 258:	13 06       	cpc	r1, r19
 25a:	14 06       	cpc	r1, r20
 25c:	55 1f       	adc	r21, r21
 25e:	f2 cf       	rjmp	.-28     	; 0x244 <__fp_split3+0xe>
 260:	46 95       	lsr	r20
 262:	f1 df       	rcall	.-30     	; 0x246 <__fp_splitA>
 264:	08 c0       	rjmp	.+16     	; 0x276 <__fp_splitA+0x30>
 266:	16 16       	cp	r1, r22
 268:	17 06       	cpc	r1, r23
 26a:	18 06       	cpc	r1, r24
 26c:	99 1f       	adc	r25, r25
 26e:	f1 cf       	rjmp	.-30     	; 0x252 <__fp_splitA+0xc>
 270:	86 95       	lsr	r24
 272:	71 05       	cpc	r23, r1
 274:	61 05       	cpc	r22, r1
 276:	08 94       	sec
 278:	08 95       	ret

0000027a <__fp_zero>:
 27a:	e8 94       	clt

0000027c <__fp_szero>:
 27c:	bb 27       	eor	r27, r27
 27e:	66 27       	eor	r22, r22
 280:	77 27       	eor	r23, r23
 282:	cb 01       	movw	r24, r22
 284:	97 f9       	bld	r25, 7
 286:	08 95       	ret

00000288 <__mulsf3>:
 288:	0e 94 57 01 	call	0x2ae	; 0x2ae <__mulsf3x>
 28c:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_round>
 290:	0e 94 ba 01 	call	0x374	; 0x374 <__fp_pscA>
 294:	38 f0       	brcs	.+14     	; 0x2a4 <__mulsf3+0x1c>
 296:	0e 94 c1 01 	call	0x382	; 0x382 <__fp_pscB>
 29a:	20 f0       	brcs	.+8      	; 0x2a4 <__mulsf3+0x1c>
 29c:	95 23       	and	r25, r21
 29e:	11 f0       	breq	.+4      	; 0x2a4 <__mulsf3+0x1c>
 2a0:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_inf>
 2a4:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_nan>
 2a8:	11 24       	eor	r1, r1
 2aa:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__fp_szero>

000002ae <__mulsf3x>:
 2ae:	0e 94 1b 01 	call	0x236	; 0x236 <__fp_split3>
 2b2:	70 f3       	brcs	.-36     	; 0x290 <__mulsf3+0x8>

000002b4 <__mulsf3_pse>:
 2b4:	95 9f       	mul	r25, r21
 2b6:	c1 f3       	breq	.-16     	; 0x2a8 <__mulsf3+0x20>
 2b8:	95 0f       	add	r25, r21
 2ba:	50 e0       	ldi	r21, 0x00	; 0
 2bc:	55 1f       	adc	r21, r21
 2be:	62 9f       	mul	r22, r18
 2c0:	f0 01       	movw	r30, r0
 2c2:	72 9f       	mul	r23, r18
 2c4:	bb 27       	eor	r27, r27
 2c6:	f0 0d       	add	r31, r0
 2c8:	b1 1d       	adc	r27, r1
 2ca:	63 9f       	mul	r22, r19
 2cc:	aa 27       	eor	r26, r26
 2ce:	f0 0d       	add	r31, r0
 2d0:	b1 1d       	adc	r27, r1
 2d2:	aa 1f       	adc	r26, r26
 2d4:	64 9f       	mul	r22, r20
 2d6:	66 27       	eor	r22, r22
 2d8:	b0 0d       	add	r27, r0
 2da:	a1 1d       	adc	r26, r1
 2dc:	66 1f       	adc	r22, r22
 2de:	82 9f       	mul	r24, r18
 2e0:	22 27       	eor	r18, r18
 2e2:	b0 0d       	add	r27, r0
 2e4:	a1 1d       	adc	r26, r1
 2e6:	62 1f       	adc	r22, r18
 2e8:	73 9f       	mul	r23, r19
 2ea:	b0 0d       	add	r27, r0
 2ec:	a1 1d       	adc	r26, r1
 2ee:	62 1f       	adc	r22, r18
 2f0:	83 9f       	mul	r24, r19
 2f2:	a0 0d       	add	r26, r0
 2f4:	61 1d       	adc	r22, r1
 2f6:	22 1f       	adc	r18, r18
 2f8:	74 9f       	mul	r23, r20
 2fa:	33 27       	eor	r19, r19
 2fc:	a0 0d       	add	r26, r0
 2fe:	61 1d       	adc	r22, r1
 300:	23 1f       	adc	r18, r19
 302:	84 9f       	mul	r24, r20
 304:	60 0d       	add	r22, r0
 306:	21 1d       	adc	r18, r1
 308:	82 2f       	mov	r24, r18
 30a:	76 2f       	mov	r23, r22
 30c:	6a 2f       	mov	r22, r26
 30e:	11 24       	eor	r1, r1
 310:	9f 57       	subi	r25, 0x7F	; 127
 312:	50 40       	sbci	r21, 0x00	; 0
 314:	9a f0       	brmi	.+38     	; 0x33c <__mulsf3_pse+0x88>
 316:	f1 f0       	breq	.+60     	; 0x354 <__mulsf3_pse+0xa0>
 318:	88 23       	and	r24, r24
 31a:	4a f0       	brmi	.+18     	; 0x32e <__mulsf3_pse+0x7a>
 31c:	ee 0f       	add	r30, r30
 31e:	ff 1f       	adc	r31, r31
 320:	bb 1f       	adc	r27, r27
 322:	66 1f       	adc	r22, r22
 324:	77 1f       	adc	r23, r23
 326:	88 1f       	adc	r24, r24
 328:	91 50       	subi	r25, 0x01	; 1
 32a:	50 40       	sbci	r21, 0x00	; 0
 32c:	a9 f7       	brne	.-22     	; 0x318 <__mulsf3_pse+0x64>
 32e:	9e 3f       	cpi	r25, 0xFE	; 254
 330:	51 05       	cpc	r21, r1
 332:	80 f0       	brcs	.+32     	; 0x354 <__mulsf3_pse+0xa0>
 334:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_inf>
 338:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__fp_szero>
 33c:	5f 3f       	cpi	r21, 0xFF	; 255
 33e:	e4 f3       	brlt	.-8      	; 0x338 <__mulsf3_pse+0x84>
 340:	98 3e       	cpi	r25, 0xE8	; 232
 342:	d4 f3       	brlt	.-12     	; 0x338 <__mulsf3_pse+0x84>
 344:	86 95       	lsr	r24
 346:	77 95       	ror	r23
 348:	67 95       	ror	r22
 34a:	b7 95       	ror	r27
 34c:	f7 95       	ror	r31
 34e:	e7 95       	ror	r30
 350:	9f 5f       	subi	r25, 0xFF	; 255
 352:	c1 f7       	brne	.-16     	; 0x344 <__mulsf3_pse+0x90>
 354:	fe 2b       	or	r31, r30
 356:	88 0f       	add	r24, r24
 358:	91 1d       	adc	r25, r1
 35a:	96 95       	lsr	r25
 35c:	87 95       	ror	r24
 35e:	97 f9       	bld	r25, 7
 360:	08 95       	ret

00000362 <__fp_inf>:
 362:	97 f9       	bld	r25, 7
 364:	9f 67       	ori	r25, 0x7F	; 127
 366:	80 e8       	ldi	r24, 0x80	; 128
 368:	70 e0       	ldi	r23, 0x00	; 0
 36a:	60 e0       	ldi	r22, 0x00	; 0
 36c:	08 95       	ret

0000036e <__fp_nan>:
 36e:	9f ef       	ldi	r25, 0xFF	; 255
 370:	80 ec       	ldi	r24, 0xC0	; 192
 372:	08 95       	ret

00000374 <__fp_pscA>:
 374:	00 24       	eor	r0, r0
 376:	0a 94       	dec	r0
 378:	16 16       	cp	r1, r22
 37a:	17 06       	cpc	r1, r23
 37c:	18 06       	cpc	r1, r24
 37e:	09 06       	cpc	r0, r25
 380:	08 95       	ret

00000382 <__fp_pscB>:
 382:	00 24       	eor	r0, r0
 384:	0a 94       	dec	r0
 386:	12 16       	cp	r1, r18
 388:	13 06       	cpc	r1, r19
 38a:	14 06       	cpc	r1, r20
 38c:	05 06       	cpc	r0, r21
 38e:	08 95       	ret

00000390 <__fp_round>:
 390:	09 2e       	mov	r0, r25
 392:	03 94       	inc	r0
 394:	00 0c       	add	r0, r0
 396:	11 f4       	brne	.+4      	; 0x39c <__fp_round+0xc>
 398:	88 23       	and	r24, r24
 39a:	52 f0       	brmi	.+20     	; 0x3b0 <__fp_round+0x20>
 39c:	bb 0f       	add	r27, r27
 39e:	40 f4       	brcc	.+16     	; 0x3b0 <__fp_round+0x20>
 3a0:	bf 2b       	or	r27, r31
 3a2:	11 f4       	brne	.+4      	; 0x3a8 <__fp_round+0x18>
 3a4:	60 ff       	sbrs	r22, 0
 3a6:	04 c0       	rjmp	.+8      	; 0x3b0 <__fp_round+0x20>
 3a8:	6f 5f       	subi	r22, 0xFF	; 255
 3aa:	7f 4f       	sbci	r23, 0xFF	; 255
 3ac:	8f 4f       	sbci	r24, 0xFF	; 255
 3ae:	9f 4f       	sbci	r25, 0xFF	; 255
 3b0:	08 95       	ret

000003b2 <_exit>:
 3b2:	f8 94       	cli

000003b4 <__stop_program>:
 3b4:	ff cf       	rjmp	.-2      	; 0x3b4 <__stop_program>
